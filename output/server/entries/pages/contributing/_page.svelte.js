import { c as create_ssr_component, v as validate_component } from "../../../chunks/ssr.js";
import { T as Toc } from "../../../chunks/Toc.js";
const Contributing = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<h1 data-svelte-h="svelte-j1jfn0">Contributing</h1> <h2 data-svelte-h="svelte-1swhrad">ðŸ™‹ How can I help?</h2> <p data-svelte-h="svelte-u7xyuv">Pull requests to improve docs, test coverage or examples are always welcome! If you want to implement a new feature, please submit an issue first so we can discuss project-fit. You can also look for <a href="https://github.com/janosh/elementari/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22" rel="nofollow">issues labeled â€˜help wantedâ€™</a> and open a PR to close one of those. If you donâ€™t finish, youâ€™re welcome to submit it as draft PR anyway. Someone else might take over.</p> <h2 data-svelte-h="svelte-1dop5wg">ðŸš€ Submit a PR</h2> <p data-svelte-h="svelte-fze45w">To submit a pull request, clone the repo, install dependencies and start the dev server to see changes as you make them.</p> <pre class="language-sh"><!-- HTML_TAG_START -->${`<code class="language-sh"><span class="token function">git</span> clone https://github.com/janosh/elementari
<span class="token builtin class-name">cd</span> elementari
<span class="token function">npm</span> run <span class="token function">install</span>
<span class="token function">npm</span> dev</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1wkbhdd">Before you start committing, create and check out a descriptively named branch:</p> <pre class="language-sh"><!-- HTML_TAG_START -->${`<code class="language-sh"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> my-cool-new-feature
<span class="token comment"># or</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> docs-on-something
<span class="token comment"># or</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> test-some-feature</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1l5ik9r">To ensure your changes didnâ€™t break anything, run the full test suite (which also runs in CI):</p> <pre class="language-sh"><!-- HTML_TAG_START -->${`<code class="language-sh"><span class="token function">npm</span> <span class="token builtin class-name">test</span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1fvenwo">Any new features should come with corresponding tests. If you fix a bug, please add a test that fails under the old code and passes with your changes. If youâ€™re having trouble writing tests, you can submit your PR anyway. Others might be able to help with tests but chances are your code will take longer to get merged.</p> <h2 data-svelte-h="svelte-1qrej8w">âœ… CI checks</h2> <p data-svelte-h="svelte-5rh020">This repo has 3 required CI checks that have to pass for every PR before merging:</p> <ul data-svelte-h="svelte-6o51hm"><li>tests: run as <a href="https://github.com/janosh/elementari/actions/workflows/test.yml" rel="nofollow">GitHub Action</a> (<a href="https://github.com/janosh/elementari/blob/main/.github/workflows/test.yml" rel="nofollow">workflow code</a>)</li> <li>linting: handled by <a href="https://results.pre-commit.ci/latest/github/janosh/elementari/main" rel="nofollow">pre-commit.ci</a></li> <li>docs: <a href="https://github.com/janosh/elementari/blob/main/.github/workflows/gh-pages.yml" rel="nofollow">continuous deployment</a> through GitHub Pages</li></ul> <h2 data-svelte-h="svelte-qye572">ðŸ†• New release</h2> <p data-svelte-h="svelte-11gj9su">To make a release, increase the <code>&quot;version&quot;</code> field in <code>package.json</code>. This package follows semantic versioning, meaning</p> <ul data-svelte-h="svelte-arxpeg"><li><code>v[x.y.z] -&gt; v[x+1.y.z]</code>: major release with breaking changes</li> <li><code>v[x.y.z] -&gt; v[x.y+1.z]</code>: minor release with new features</li> <li><code>v[x.y.z] -&gt; v[x.y.z+1]</code>: patch release with bug fixes</li></ul> <p data-svelte-h="svelte-1b1myo7">Now run the <code>changelog</code> script from <code>package.json</code> to update <code>changelog.md</code>.</p> <pre class="language-sh"><!-- HTML_TAG_START -->${`<code class="language-sh"><span class="token function">npm</span> changelog  <span class="token comment"># or npm run changelog</span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-7pyzox">If there have been significant code changes since the last release, itâ€™s good to update the coverage badges in the readme.</p> <pre class="language-sh"><!-- HTML_TAG_START -->${`<code class="language-sh"><span class="token function">npm</span> update-coverage</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-4bzxdb">Then commit <code>package.json</code>, <code>changelog.md</code> and <code>readme.md</code> files to the <code>main</code> branch using the new version number prefixed by <code>&#39;v&#39;</code> as commit message and tag:</p> <pre class="language-sh"><!-- HTML_TAG_START -->${`<code class="language-sh"><span class="token function">git</span> <span class="token function">add</span> package.json changelog.md readme.md
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> vx.y.z
<span class="token function">git</span> tag <span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> log <span class="token parameter variable">-1</span> <span class="token parameter variable">--pretty</span><span class="token operator">=</span>%B<span class="token variable">)</span></span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1gouoxa">Push the release commit and tag to <code>origin/main</code>:</p> <pre class="language-sh"><!-- HTML_TAG_START -->${`<code class="language-sh"><span class="token function">git</span> push <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> push <span class="token parameter variable">--tags</span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-173ne07">Finally <a href="https://github.com/janosh/elementari/releases/new" rel="nofollow">publish a new release on GitHub</a>.</p>`;
});
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<main>${validate_component(Contributing, "Contributing").$$render($$result, {}, {}, {})}</main> ${validate_component(Toc, "Toc").$$render(
    $$result,
    {
      headingSelector: "main > :where(h2)",
      breakpoint: 1250
    },
    {},
    {}
  )}`;
});
export {
  Page as default
};
