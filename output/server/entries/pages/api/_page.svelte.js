import { c as create_ssr_component, g as subscribe, b as add_attribute, h as each, e as escape } from "../../../chunks/ssr.js";
import { u as url_param_store } from "../../../chunks/Tooltip.svelte_svelte_type_style_lang.js";
import "../../../chunks/client.js";
const css = {
  code: "h1.svelte-8e27l1.svelte-8e27l1{text-align:center}ul.svelte-8e27l1.svelte-8e27l1{list-style:none;padding:0;display:flex;flex-wrap:wrap;gap:5pt 3ex}ul.svelte-8e27l1 li .key.svelte-8e27l1{font-weight:bold;font-family:monospace}ul.svelte-8e27l1 li small.svelte-8e27l1{font-weight:lighter}summary.svelte-8e27l1 .svelte-8e27l1:is(h3, h4){margin:1ex;display:inline-block}details.svelte-8e27l1>.svelte-8e27l1:not(summary){padding-left:1em}pre.svelte-8e27l1.svelte-8e27l1{font-size:9.5pt}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { fetch_zipped, mp_build_bucket } from \'$lib/api\';\\nimport { url_param_store } from \'svelte-zoo\';\\nexport let data;\\nconst mp_id = url_param_store(`id`, `mp-1`);\\n$: aws_url = `${mp_build_bucket}/summary/${$mp_id}.json.gz`;\\nconst responses = {};\\n<\/script>\\n\\n<main>\\n  <h1>API Explorer</h1>\\n  <center>\\n    <input\\n      placeholder=\\"Enter MP material ID\\"\\n      bind:value={$mp_id}\\n      on:keydown={async (event) => {\\n        if (event.key === `Enter`) data.summary = await fetch_zipped(aws_url)\\n      }}\\n    />\\n    <button on:click={async () => (data.summary = await fetch_zipped(aws_url))}>\\n      Fetch material\\n    </button>\\n  </center>\\n\\n  <h2>Available AWS Open Data Buckets</h2>\\n  <ol style=\\"columns: 3;\\">\\n    {#each data.buckets as bucket_name}\\n      <li>\\n        <code>{bucket_name}</code>\\n      </li>\\n    {/each}\\n  </ol>\\n  {#each data.buckets as bucket_name, idx}\\n    <details\\n      on:toggle={async () => {\\n        let err = true\\n        let id = 1\\n        while (err && id < 20) {\\n          try {\\n            responses[bucket_name] = await fetch_zipped(\\n              `${mp_build_bucket}/${bucket_name}/mp-${id}.json.gz`\\n            )\\n            err = false\\n          } catch (err) {\\n            id++\\n          }\\n        }\\n      }}\\n    >\\n      <summary>\\n        <h3>{idx + 1}. <code>{bucket_name}</code> bucket</h3>\\n      </summary>\\n      <details open>\\n        <summary><h4>Top-level keys</h4> </summary>\\n        <ul>\\n          {#each Object.entries(responses[bucket_name] ?? {}) as [key, val]}\\n            <li><span class=\\"key\\">{key}</span>: <small>{typeof val}</small></li>\\n          {/each}\\n        </ul>\\n      </details>\\n      <details>\\n        <summary><h4>Full Response</h4></summary>\\n\\n        <pre>{JSON.stringify(responses[bucket_name], null, 2)}</pre>\\n      </details>\\n    </details>\\n  {/each}\\n</main>\\n\\n<style>\\n  h1 {\\n    text-align: center;\\n  }\\n  ul {\\n    list-style: none;\\n    padding: 0;\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 5pt 3ex;\\n  }\\n  ul li .key {\\n    font-weight: bold;\\n    font-family: monospace;\\n  }\\n  ul li small {\\n    font-weight: lighter;\\n  }\\n  summary :is(h3, h4) {\\n    margin: 1ex;\\n    display: inline-block;\\n  }\\n  details > :not(summary) {\\n    padding-left: 1em;\\n  }\\n  pre {\\n    font-size: 9.5pt;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAqEE,8BAAG,CACD,UAAU,CAAE,MACd,CACA,8BAAG,CACD,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,GAAG,CAAE,GAAG,CAAC,GACX,CACA,gBAAE,CAAC,EAAE,CAAC,kBAAK,CACT,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,SACf,CACA,gBAAE,CAAC,EAAE,CAAC,mBAAM,CACV,WAAW,CAAE,OACf,CACA,qBAAO,eAAC,IAAI,EAAE,EAAE,EAAE,CAAE,CAClB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,YACX,CACA,qBAAO,eAAG,KAAK,OAAO,CAAE,CACtB,YAAY,CAAE,GAChB,CACA,+BAAI,CACF,SAAS,CAAE,KACb"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $mp_id, $$unsubscribe_mp_id;
  let { data } = $$props;
  const mp_id = url_param_store(`id`, `mp-1`);
  $$unsubscribe_mp_id = subscribe(mp_id, (value) => $mp_id = value);
  const responses = {};
  if ($$props.data === void 0 && $$bindings.data && data !== void 0)
    $$bindings.data(data);
  $$result.css.add(css);
  $$unsubscribe_mp_id();
  return `<main><h1 class="svelte-8e27l1" data-svelte-h="svelte-exhvzr">API Explorer</h1> <center><input placeholder="Enter MP material ID"${add_attribute("value", $mp_id, 0)}> <button data-svelte-h="svelte-19d9jtc">Fetch material</button></center> <h2 data-svelte-h="svelte-ips99d">Available AWS Open Data Buckets</h2> <ol style="columns: 3;">${each(data.buckets, (bucket_name) => {
    return `<li><code>${escape(bucket_name)}</code> </li>`;
  })}</ol> ${each(data.buckets, (bucket_name, idx) => {
    return `<details class="svelte-8e27l1"><summary class="svelte-8e27l1"><h3 class="svelte-8e27l1">${escape(idx + 1)}. <code class="svelte-8e27l1">${escape(bucket_name)}</code> bucket</h3></summary> <details open class="svelte-8e27l1"><summary class="svelte-8e27l1" data-svelte-h="svelte-1l2aul7"><h4 class="svelte-8e27l1">Top-level keys</h4></summary> <ul class="svelte-8e27l1">${each(Object.entries(responses[bucket_name] ?? {}), ([key, val]) => {
      return `<li><span class="key svelte-8e27l1">${escape(key)}</span>: <small class="svelte-8e27l1">${escape(typeof val)}</small></li>`;
    })} </ul></details> <details class="svelte-8e27l1"><summary class="svelte-8e27l1" data-svelte-h="svelte-12pvtf5"><h4 class="svelte-8e27l1">Full Response</h4></summary> <pre class="svelte-8e27l1">${escape(JSON.stringify(responses[bucket_name], null, 2))}</pre></details> </details>`;
  })} </main>`;
});
export {
  Page as default
};
